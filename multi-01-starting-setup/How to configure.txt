1) Creare network 
docker network create goals-net

2) MongoDB
2.1) execute docker run --name mongodb --rm -d --network goals-net mongo

3) Backend
3.1) Change 'mongodb://host.docker.internal:27017/course-goals' to 'mongodb://mongodb:27017/course-goals' inside app.js
3.2) cd backend; docker build -t goals-node .
3.3) execute docker run --name goals-backend --rm -d -p 80:80 --network goals-net goals-node

4) frontend React
4.3) docker run --name goals-frontend --rm -d -p 3000:3000 -it goals-react
--------------------
Data persistence on MogoDB
docker run --name mongodb -v data:/data/db --rm -d --network goals-net mongo

Data security on MogoDB 
1) docker volume rm data (the db was created without admin/password and then the connection will fail)
2) docker run --name mongodb -v data:/data/db --rm -d --network goals-net -e MONGO_INITDB_ROOT_USERNAME=GIOhnny -e MONGO_INITDB_ROOT_PASSWORD=secret mongo
3) docker run --name goals-backend --rm -p 80:80 -d --network goals-net goals-node

87. Volumes, Bind Mounts for NodeJs Backend
1) Prepare volume for logs
2) Prepare /app content
3) Prepare node_modules

docker run --name goals-backend -v "D:/Projects/Docker/multi-01-starting-setup/backend":/app -v logs:/app/logs -v /app/node_modules --rm -d -p 80:80 --network goals-net goals-node
Because of the CMD command in Dockerfile the app will not refresh when updated
#command to be executed on container startup
CMD ["node", "app.js"]

Solution:
a) Add in the package.json the nodemon module
  "devDependencies": {
    "nodemon": "^2.0.4"
  }
b) also add the nodemon in the scripts section
 "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon --legacy-watch app.js"
  }
c) replace in Docker file
CMD ["node", "app.js"] with
CMD ["npm", "start"]

d) Add in Docker file
#install nodemon global
RUN npm install --global nodemon

Adding Environment Variables
a) Dockerfile for backend
#set Env variables
ENV MONGODB_USERNAME GIOhnny
ENV MONGODB_PASSWORD secret

b) mongoose config in app.js
mongoose.connect(
  `mongodb://${process.env.MONGODB_USERNAME}:${process.env.MONGODB_PASSWORD}@mongodb:27017/course-goals?authSource=admin`,

Docker ignore
a) create a file .dockerignore

Live source Code Upodates for React
a) Add ENV WATCHPACK_POLLING=true to enable autorefresh on windows
b) Add volume for the sources
#docker run -v "D:/Projects/Docker/multi-01-starting-setup/frontend/src":/app/src --name goals-frontend --rm -d -p 3000:3000 -it goals-react